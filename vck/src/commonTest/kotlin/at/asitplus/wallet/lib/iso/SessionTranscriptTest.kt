package at.asitplus.wallet.lib.iso

import at.asitplus.signum.indispensable.cosef.CoseKey
import io.kotest.core.spec.style.FreeSpec
import io.kotest.matchers.shouldBe
import io.kotest.matchers.shouldNotBe

class SessionTranscriptTest : FreeSpec({

    "local presentation" {
        val expectedEncodedSessionTranscript = byteArrayOf(-125, -40, 24, 88, 88, -94, 0, 99, 49, 46, 48, 1, -126, 1, -40, 24, 88, 75, -92, 1, 2, 32, 1, 33, 88, 32, -61, 52, -80, 93, -55, -99, -8, -124, -49, -124, -56, 96, 31, -32, 107, -90, -84, -65, -38, 89, 92, -98, -22, -13, 67, 85, 90, -61, 127, 22, 65, -95, 34, 88, 32, 81, -15, 87, -86, -54, -50, -113, 70, -90, 110, 18, 40, 14, 99, 18, -13, -120, -111, -127, -67, -52, -94, 34, -68, 32, 121, -18, -4, -63, 49, 127, -27, -40, 24, 88, 75, -92, 1, 2, 32, 1, 33, 88, 32, -1, 101, 49, -109, 115, -116, -36, -29, 56, -1, 66, -10, 7, -96, 112, 58, 10, 3, 48, 16, -38, 22, -51, -44, 81, 10, 107, -33, 70, -117, -120, 51, 34, 88, 32, 81, 61, 33, 45, 117, -70, 103, 20, 81, 87, -28, 88, -31, -25, 91, -95, 62, 27, 7, 15, -75, 113, 53, -72, -6, 70, -112, 124, 43, -48, 126, 76, -126, 88, -64, -111, 2, 15, 72, 115, 21, -47, 2, 9, 97, 99, 1, 1, 48, 1, 4, 109, 100, 111, 99, 28, 30, 88, 4, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 100, 101, 118, 105, 99, 101, 101, 110, 103, 97, 103, 101, 109, 101, 110, 116, 109, 100, 111, 99, -94, 0, 99, 49, 46, 48, 1, -126, 1, -40, 24, 88, 75, -92, 1, 2, 32, 1, 33, 88, 32, -61, 52, -80, 93, -55, -99, -8, -124, -49, -124, -56, 96, 31, -32, 107, -90, -84, -65, -38, 89, 92, -98, -22, -13, 67, 85, 90, -61, 127, 22, 65, -95, 34, 88, 32, 81, -15, 87, -86, -54, -50, -113, 70, -90, 110, 18, 40, 14, 99, 18, -13, -120, -111, -127, -67, -52, -94, 34, -68, 32, 121, -18, -4, -63, 49, 127, -27, 90, 32, 9, 1, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 118, 110, 100, 46, 98, 108, 117, 101, 116, 111, 111, 116, 104, 46, 108, 101, 46, 111, 111, 98, 48, 2, 28, 1, 5, 119, 0, 0, 0, -32, 88, -82, -111, 2, 21, 72, 114, 21, -111, 2, 4, 97, 99, 1, 1, 48, 0, 81, 2, 6, 97, 99, 1, 3, 110, 102, 99, 0, 28, 30, 6, 10, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 114, 101, 97, 100, 101, 114, 101, 110, 103, 97, 103, 101, 109, 101, 110, 116, 109, 100, 111, 99, 114, 101, 97, 100, 101, 114, -95, 0, 99, 49, 46, 48, 26, 32, 27, 1, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 118, 110, 100, 46, 98, 108, 117, 101, 116, 111, 111, 116, 104, 46, 108, 101, 46, 111, 111, 98, 48, 2, 28, 3, 17, 7, -116, 66, -35, -5, 18, -66, -110, -110, -34, 72, -35, 57, 116, -113, -89, 123, 5, 119, 0, 0, 0, -32, 92, 17, 10, 3, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 110, 102, 99, 110, 102, 99, 1, 3, 1, -1, -1, 4, 2, 1, 0, 0)

        val coseEncodedEReaderKey = byteArrayOf(-92, 1, 2, 32, 1, 33, 88, 32, -1, 101, 49, -109, 115, -116, -36, -29, 56, -1, 66, -10, 7, -96, 112, 58, 10, 3, 48, 16, -38, 22, -51, -44, 81, 10, 107, -33, 70, -117, -120, 51, 34, 88, 32, 81, 61, 33, 45, 117, -70, 103, 20, 81, 87, -28, 88, -31, -25, 91, -95, 62, 27, 7, 15, -75, 113, 53, -72, -6, 70, -112, 124, 43, -48, 126, 76)
        val coseEncodedNFCHandover = byteArrayOf(-126, 88, -64, -111, 2, 15, 72, 115, 21, -47, 2, 9, 97, 99, 1, 1, 48, 1, 4, 109, 100, 111, 99, 28, 30, 88, 4, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 100, 101, 118, 105, 99, 101, 101, 110, 103, 97, 103, 101, 109, 101, 110, 116, 109, 100, 111, 99, -94, 0, 99, 49, 46, 48, 1, -126, 1, -40, 24, 88, 75, -92, 1, 2, 32, 1, 33, 88, 32, -61, 52, -80, 93, -55, -99, -8, -124, -49, -124, -56, 96, 31, -32, 107, -90, -84, -65, -38, 89, 92, -98, -22, -13, 67, 85, 90, -61, 127, 22, 65, -95, 34, 88, 32, 81, -15, 87, -86, -54, -50, -113, 70, -90, 110, 18, 40, 14, 99, 18, -13, -120, -111, -127, -67, -52, -94, 34, -68, 32, 121, -18, -4, -63, 49, 127, -27, 90, 32, 9, 1, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 118, 110, 100, 46, 98, 108, 117, 101, 116, 111, 111, 116, 104, 46, 108, 101, 46, 111, 111, 98, 48, 2, 28, 1, 5, 119, 0, 0, 0, -32, 88, -82, -111, 2, 21, 72, 114, 21, -111, 2, 4, 97, 99, 1, 1, 48, 0, 81, 2, 6, 97, 99, 1, 3, 110, 102, 99, 0, 28, 30, 6, 10, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 114, 101, 97, 100, 101, 114, 101, 110, 103, 97, 103, 101, 109, 101, 110, 116, 109, 100, 111, 99, 114, 101, 97, 100, 101, 114, -95, 0, 99, 49, 46, 48, 26, 32, 27, 1, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 118, 110, 100, 46, 98, 108, 117, 101, 116, 111, 111, 116, 104, 46, 108, 101, 46, 111, 111, 98, 48, 2, 28, 3, 17, 7, -116, 66, -35, -5, 18, -66, -110, -110, -34, 72, -35, 57, 116, -113, -89, 123, 5, 119, 0, 0, 0, -32, 92, 17, 10, 3, 105, 115, 111, 46, 111, 114, 103, 58, 49, 56, 48, 49, 51, 58, 110, 102, 99, 110, 102, 99, 1, 3, 1, -1, -1, 4, 2, 1, 0, 0)
        val eReaderCoseKey = CoseKey.deserialize(coseEncodedEReaderKey)
        val nfcHandover = NFCHandover.deserialize(coseEncodedNFCHandover)

        val encodedDeviceEngagement = byteArrayOf(-94, 0, 99, 49, 46, 48, 1, -126, 1, -40, 24, 88, 75, -92, 1, 2, 32, 1, 33, 88, 32, -61, 52, -80, 93, -55, -99, -8, -124, -49, -124, -56, 96, 31, -32, 107, -90, -84, -65, -38, 89, 92, -98, -22, -13, 67, 85, 90, -61, 127, 22, 65, -95, 34, 88, 32, 81, -15, 87, -86, -54, -50, -113, 70, -90, 110, 18, 40, 14, 99, 18, -13, -120, -111, -127, -67, -52, -94, 34, -68, 32, 121, -18, -4, -63, 49, 127, -27)

        val sessionTranscript = SessionTranscript(
            deviceEngagementBytes = encodedDeviceEngagement,
            eReaderKeyBytes = eReaderCoseKey.getOrThrow().serialize(),
            nfcHandover = nfcHandover.getOrThrow()
        )

        sessionTranscript.oid4VPHandover shouldBe null
        sessionTranscript.nfcHandover shouldNotBe null
        sessionTranscript.serialize() shouldBe expectedEncodedSessionTranscript
    }

    "oid4vp" {
        val clientIdToHash = byteArrayOf(84, 58, -44, 125, 6, 21, -120, -126, -57, 76, -46, -122, -99, -69, -80, -101, -39, -12, 43, 71, -51, 14, 21, -65, -120, 9, -89, -88, 53, 16, -18, 60)
        val responseUriToHash = byteArrayOf(-116, -19, 108, 67, -16, 99, 59, 101, 27, -89, 41, -115, 5, 124, 127, -77, -80, 31, -104, 59, 7, -107, 80, -48, 1, 113, -92, -107, -16, 41, 115, -126)
        val nonce = "7c25a392-ecd5-448e-b08a-067d077bc96b"
        val expectedEncodedSessionTranscript = byteArrayOf(-125, -10, -10, -125, 88, 32, 84, 58, -44, 125, 6, 21, -120, -126, -57, 76, -46, -122, -99, -69, -80, -101, -39, -12, 43, 71, -51, 14, 21, -65, -120, 9, -89, -88, 53, 16, -18, 60, 88, 32, -116, -19, 108, 67, -16, 99, 59, 101, 27, -89, 41, -115, 5, 124, 127, -77, -80, 31, -104, 59, 7, -107, 80, -48, 1, 113, -92, -107, -16, 41, 115, -126, 120, 36, 55, 99, 50, 53, 97, 51, 57, 50, 45, 101, 99, 100, 53, 45, 52, 52, 56, 101, 45, 98, 48, 56, 97, 45, 48, 54, 55, 100, 48, 55, 55, 98, 99, 57, 54, 98)

        val sessionTranscript = SessionTranscript(
            deviceEngagementBytes = null,
            eReaderKeyBytes = null,
            oid4VPHandover = OID4VPHandover(
                clientIdHash = clientIdToHash,
                responseUriHash = responseUriToHash,
                nonce = nonce
            ),
        )

        sessionTranscript.oid4VPHandover shouldNotBe null
        sessionTranscript.nfcHandover shouldBe null
        sessionTranscript.serialize() shouldBe expectedEncodedSessionTranscript
    }

})